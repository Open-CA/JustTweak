//
//  GeneratedConfigurationAccessor.swift
//  Generated by TweakPropertyGenerator
//

import Foundation
import JustTweak

class GeneratedConfigurationAccessor {

    static let tweakManager: TweakManager = {
        var configurations: [Configuration] = []

        // UserDefaultsConfiguration
        let userDefaultsConfiguration_1 = UserDefaultsConfiguration(userDefaults: UserDefaults.standard)
        configurations.append(userDefaultsConfiguration_1)

        // LocalConfiguration
        let jsonFileURL_1 = Bundle.main.url(forResource: "ValidConfiguration", withExtension: "json")!
        let localConfiguration_1 = LocalConfiguration(jsonURL: jsonFileURL_1)
        configurations.append(localConfiguration_1)

        return TweakManager(configurations: configurations)
    }()
        
    private var tweakManager: TweakManager {
        return Self.tweakManager
    }

    @TweakProperty(feature: Features.general,
                   variable: Variables.answerToTheUniverse,
                   tweakManager: tweakManager)
    var definitiveAnswer: Int

    @TweakProperty(feature: Features.general,
                   variable: Variables.greetOnAppDidBecomeActive,
                   tweakManager: tweakManager)
    var greetOnAppDidBecomeActive: Bool

    @TweakProperty(feature: Features.general,
                   variable: Variables.tapToChangeColorEnabled,
                   tweakManager: tweakManager)
    var tapToChangeColorEnabled: Bool

    @TweakProperty(feature: Features.uiCustomization,
                   variable: Variables.displayGreenView,
                   tweakManager: tweakManager)
    var displayGreenView: Bool

    @TweakProperty(feature: Features.uiCustomization,
                   variable: Variables.displayRedView,
                   tweakManager: tweakManager)
    var displayRedView: Bool

    @TweakProperty(feature: Features.uiCustomization,
                   variable: Variables.displayYellowView,
                   tweakManager: tweakManager)
    var displayYellowView: Bool

    @TweakProperty(feature: Features.uiCustomization,
                   variable: Variables.labelText,
                   tweakManager: tweakManager)
    var labelText: String

    @TweakProperty(feature: Features.uiCustomization,
                   variable: Variables.redViewAlphaComponent,
                   tweakManager: tweakManager)
    var redViewAlphaComponent: Double
}
